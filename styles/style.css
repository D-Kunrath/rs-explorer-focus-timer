/* globals */

* {
  margin: 0;
  padding: 0;
  box-sizing: 0;
}

:root {
  --tt-primary: #323238;
  --tt-secondary: #ffffff;
  --bg-primary: #e1e1e6;
  --bg-secondary: #02799d;

  font-size: clamp(1rem, 4vw, 3rem);
}

body,
button,
input {
  font-family: "Roboto", sans-serif;
}

body {
  min-height: 100vh;
  min-height: 100svh;
  color: var(--tt-primary);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: clamp(1rem, 15vw, 3rem);
}

.sr-only:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

button {
  cursor: pointer;
  border: none;
  background-color: transparent;
}

/* timer */

#app {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#app.running .ph-play-circle,
#app:not(.running) .ph-pause-circle {
  display: none;
}

#app.running .ph-timer {
  color: var(--bg-primary);
  cursor: auto;
}

#timer {
  font-size: 2.5rem;
  display: flex;
}

#timer input {
  font-size: 2.5rem;
  color: var(--tt-primary);
  border: none;
  padding: 0;
  text-align: center;
  width: 3rem;
}

#controls {
  display: flex;
  gap: 0.5rem;
}

#controls button {
  font-size: 1rem;
}

#controls button:hover {
  transform: scale(1.1);
}

#controls button:active {
  transform: scale(1.05);
}

/* soundboard */

#soundboard {
  max-width: 7rem;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 0.8rem;
}

#soundboard button {
  height: 3rem;
  width: 2.8rem;
  border-radius: 0.5rem;
  font-size: 2rem;
  background-color: var(--bg-primary);
  color: var(--tt-primary);
}

#soundboard button.active {
  background-color: var(--bg-secondary);
  color: var(--tt-secondary);
}

@media (max-width: 425px) {
  :root {
    font-size: clamp(1rem, 4vh, 3rem);
  }
  body {
    flex-direction: column;
  }
}
